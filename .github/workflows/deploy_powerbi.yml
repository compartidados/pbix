name: Publicar arquivos Power BI

on:
  push:
    branches:
      - main
    paths:
      - 'pbix-files/**'
  workflow_dispatch:

jobs:
  publish-powerbi:
    runs-on: windows-latest
    steps:
      - name: Checkout repositório
        uses: actions/checkout@v3

      - name: Verificar ambiente PowerShell
        shell: pwsh
        run: |
          $PSVersionTable
          Write-Host "Diretório atual: $PWD"
          Write-Host "Conteúdo do repositório:"
          Get-ChildItem -Recurse | Select-Object -First 20
      
      - name: Instalar módulos Power BI
        shell: pwsh
        run: |
          Install-PackageProvider -Name NuGet -Force -Scope CurrentUser
          Set-PSRepository -Name PSGallery -InstallationPolicy Trusted
          Install-Module -Name MicrosoftPowerBIMgmt -Force -Scope CurrentUser
          Get-Module -ListAvailable MicrosoftPowerBIMgmt*
      
      - name: Encontrar arquivos PBIX
        id: find_files
        shell: pwsh
        run: |
          # Criar a pasta se não existir
          if (-not (Test-Path "pbix-files")) {
            New-Item -Path "pbix-files" -ItemType Directory
            Write-Host "Pasta pbix-files criada"
          }
          
          # Encontrar arquivos PBIX
          $files = Get-ChildItem -Path "pbix-files" -Filter "*.pbix" -File -Recurse
          
          if ($files.Count -gt 0) {
            $fileList = $files.FullName -join "`n"
            Write-Host "Arquivos encontrados:"
            Write-Host $fileList
            
            # Salvar lista de arquivos para o próximo passo
            $fileList | Out-File -FilePath "pbix_files_list.txt"
            echo "found=true" >> $env:GITHUB_OUTPUT
          } else {
            Write-Host "Nenhum arquivo PBIX encontrado."
            echo "found=false" >> $env:GITHUB_OUTPUT
          }
      
      - name: Publicar no Power BI
        if: steps.find_files.outputs.found == 'true'
        shell: pwsh
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          TENANT_ID: eaaf39f1-6f65-42cc-bfe2-b9c336aaf2a2
          WORKSPACE_ID: 37ac69ab-ad7a-4540-af1d-baa525ee3c7f
        run: |
          # Criar credencial para autenticação
          $password = ConvertTo-SecureString "$env:CLIENT_SECRET" -AsPlainText -Force
          $credential = New-Object System.Management.Automation.PSCredential($env:CLIENT_ID, $password)
          
          # Conectar ao serviço Power BI
          Write-Host "Conectando ao Power BI..."
          Connect-PowerBIServiceAccount -ServicePrincipal -Credential $credential -TenantId $env:TENANT_ID
          
          # Ler arquivos da lista
          $files = Get-Content -Path "pbix_files_list.txt"
          
          # Publicar cada arquivo
          foreach ($file in $files) {
            if (Test-Path $file) {
              $fileName = Split-Path -Path $file -Leaf
              Write-Host "Publicando: $fileName ..."
              try {
                New-PowerBIReport -Path $file -WorkspaceId $env:WORKSPACE_ID -ConflictAction CreateOrOverwrite
                Write-Host "✅ $fileName publicado com sucesso!"
              } catch {
                Write-Host "❌ Erro ao publicar $fileName : $_"
              }
            } else {
              Write-Host "❌ Arquivo não encontrado: $file"
            }
          }
          
          Write-Host "Processo de publicação concluído"
