name: Publicar arquivos Power BI

on:
  push:
    branches:
      - main
    paths:
      - 'pbix-files/**/*.pbix'
  workflow_dispatch:

jobs:
  deploy-powerbi:
    runs-on: windows-latest  # Usando Windows para melhor suporte ao PowerShell
    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v3

      - name: Listar arquivos PBIX
        id: find-pbix
        shell: pwsh
        run: |
          $files = Get-ChildItem -Path "pbix-files" -Filter "*.pbix" -Recurse -File | Select-Object -ExpandProperty FullName
          $filesList = $files -join ','
          Write-Host "Arquivos PBIX encontrados: $filesList"
          echo "files=$filesList" >> $env:GITHUB_OUTPUT

      - name: Instalar módulo Power BI
        if: steps.find-pbix.outputs.files != ''
        shell: pwsh
        run: |
          Install-Module -Name MicrosoftPowerBIMgmt -Force -Scope CurrentUser -SkipPublisherCheck
          Write-Host "Módulo Power BI instalado com sucesso"

      - name: Publicar arquivos PBIX
        if: steps.find-pbix.outputs.files != ''
        shell: pwsh
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          TENANT_ID: "eaaf39f1-6f65-42cc-bfe2-b9c336aaf2a2"
          WORKSPACE_ID: "37ac69ab-ad7a-4540-af1d-baa525ee3c7f"
        run: |
          # Criar credencial segura
          $password = ConvertTo-SecureString $env:CLIENT_SECRET -AsPlainText -Force
          $credential = New-Object System.Management.Automation.PSCredential($env:CLIENT_ID, $password)
          
          # Conectar ao Power BI
          Connect-PowerBIServiceAccount -ServicePrincipal -Credential $credential -TenantId $env:TENANT_ID
          
          # Obter lista de arquivos
          $filesList = "${{ steps.find-pbix.outputs.files }}"
          $files = $filesList -split ','
          
          # Publicar cada arquivo
          foreach ($file in $files) {
            $fileName = Split-Path $file -Leaf
            Write-Host "Publicando arquivo: $fileName"
            
            try {
              New-PowerBIReport -Path $file -WorkspaceId $env:WORKSPACE_ID -ConflictAction CreateOrOverwrite
              Write-Host "Arquivo $fileName publicado com sucesso"
            }
            catch {
              Write-Host "Erro ao publicar $fileName : $_"
              exit 1
            }
          }
          
          Write-Host "Processo de publicação concluído"
